
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define HYP(key) LS(LC(LG(key)))
#define HYPER  LS(LC(LALT))

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
// Row 1 Left - 7 
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &tog 1  
// Row 1 Right - 7 
&mo 3  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp MINUS
// Row 2 Left - 7
&kp TAB  &kp Q  &kp W  &kp F  &kp P  &kp B  &tog 0
// Row 2 Right - 7
&none  &kp J  &kp L  &kp O  &kp Y  &kp SEMI  &kp BSLH
// Row 3 Left - 7 
&kp ESC  &kp A  &km LEFT_ALT R  &km LEFT_CONTROL S  &hm LEFT_GUI T  &kp G  &tog 2
// Row middle - 4 top b
&mo 2  &kp LEFT_ALT  &kp PG_UP &kp LEFT_META
// Row 3 Right - 7 Note: sqt means '
&kp LEFT_SHIFT  &kp M  &km RIGHT_GUI N  &km RIGHT_CONTROL E  &km RIGHT_ALT I  &kp U  &kp SQT
// Row 4 Left - 6
&kp LSHFT  &kp Z  &kp X  &kp C  &kp D  &kp V
// Lots of nones, I assume no meaning
&none  &none
// Middle left thumb cluster
&kp LEFT_SHIFT
&none  &none
// Middle right thumb cluster
&kp PG_DN
&none  &none
// Row 4 Right - 6
&kp K  &kp H  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
// Row 4 Left - 6
&mo 2  &kp GRAVE  &none  &kp LEFT_ARROW  &kp RIGHT_ARROW
// Left bottom thumb cluster
&mt LEFT_CONTROL ESCAPE  &mt LEFT_SHIFT SPACE &mt LEFT_GUI ENTER
// Right bottom thumb cluster
&lt 1 TAB  &lt 2 BACKSPACE  &kp HYPER
&kp UP_ARROW  &kp DOWN_ARROW  &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL            &kp N1        &kp N2        &kp N3        &kp N4             &kp N5            &trans   &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET            &trans  &trans   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
   &kp ESC     &kp SEMICOLON  &kp NUMBER_4        &kp N5        &kp N6          &kp EQUAL             &none  &trans  &trans                                   &trans           &trans      &trans     &kp H  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT         &kp GRAVE        &kp N1        &kp N2        &kp N3      &kp BACKSLASH             &none   &none  &trans       &none         &none         &trans            &none       &none     &kp N  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
     &mo 2         &kp GRAVE      &kp CAPS      &kp LEFT     &kp RIGHT             &trans            &trans  &trans  &trans      &trans        &trans         &kp UP         &kp DOWN  &kp KP_DOT  &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &trans   &mo 3      &kp F7       &kp F8      &kp F9       &kp F10         &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &kp K_REDO  &kp K_PASTE  &kp K_COPY     &kp K_CUT      &kp K_UNDO   &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans      &trans                                 &trans          &trans   &trans       &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none   &none      &trans        &none       &none        &trans           &none    &none  &kp INSERT          &trans   &kp PAGE_DOWN   &kp PAGE_UP          &kp END  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans      &trans       &trans      &trans  &kp UP_ARROW  &kp DOWN_ARROW   &trans      &trans          &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                            &tog 0       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                            &trans  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };
    };
};
